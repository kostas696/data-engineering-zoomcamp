services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 60000
    depends_on:
      zookeeper:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1536M
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  producer:
    build:
      context: ./data_ingestion
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: crypto-prices
    volumes:
      - ./wait-for-kafka.sh:/app/wait-for-kafka.sh
      - ./data_ingestion/assets.txt:/app/assets.txt
      - ./.env:/app/.env
    restart: on-failure

  consumer:
    build:
      context: .
      dockerfile: gcs/Dockerfile
    container_name: consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: crypto-prices
      GCP_BUCKET_NAME: souf-de-zoomcamp-project
      GCP_BASE_PATH: crypto/raw
      GOOGLE_APPLICATION_CREDENTIALS: /app/gcloud-key.json
    volumes:
      - ./wait-for-kafka.sh:/app/wait-for-kafka.sh
      - ./gcloud/kafka-consumer-key.json:/app/gcloud-key.json
    restart: on-failure
  
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.7.2
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./validation:/opt/airflow/validation
      - ./spark_jobs:/opt/airflow/spark_jobs
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.7.2
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./validation:/opt/airflow/validation
      - ./spark_jobs:/opt/airflow/spark_jobs
    command: scheduler

volumes:
  postgres_data:
